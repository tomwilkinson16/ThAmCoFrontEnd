@model IEnumerable<ThAmCo.CheapestProducts.Services.CheapestProduct.LowestProductDto>

@{
    ViewData["Title"] = "Home Page";
}

<div class="row">
    <div class="col-md-12">
        <h2>Filter Products</h2>
        <form id="filterForm">
            <div class="form-group">
                <label for="SearchQuery">Search</label>
                <input type="text" id="SearchQuery" name="searchQuery" class="form-control" placeholder="Enter product name" />
            </div>
            <div class="form-group">
                <label for="MinPrice">Min Price</label>
                <input type="number" id="MinPrice" name="minPrice" class="form-control" />
            </div>
            <div class="form-group">
                <label for="MaxPrice">Max Price</label>
                <input type="number" id="MaxPrice" name="maxPrice" class="form-control" />
            </div>
            <br />
            <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">Remove Filter</a>
        </form>
    </div>
</div>

<div>
    <h2>Product List</h2>
    <div id="productList" class="row">
        @foreach (var product in Model)
        {
            <div class="col-md-4">
                <div class="card mb-4">
                    <img style="max-width: 300px; max-height: 300px;" src="@product.ImageUrl" class="card-img-top d-block mx-auto" alt="@product.Name">
                    <div class="card-body">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text">Price: £@product.Price</p>
                        <p class="card-text">Stock Level: @product.StockLevel</p>
                        <p class="card-text">@product.Description</p>
                        @if (User.Identity != null && User.Identity.IsAuthenticated)
                        {
                            <div class="form-group">
                                <label for="quantity-@product.Id">Quantity</label>
                                <select id="quantity-@product.Id" class="form-control quantity-select" @(product.StockLevel == 0 ? "disabled" : "")>
                                    @for (int i = 1; i <= product.StockLevel; i++)
                                    {
                                        <option value="@i">@i</option>
                                    }
                                </select>
                            </div>
                            <br />
                            <button class="btn btn-primary add-to-basket" 
                                    data-product-id="@product.Id" 
                                    data-product-name="@product.Name" 
                                    data-product-price="@product.Price"
                                    @(product.StockLevel == 0 ? "disabled" : "")>
                                Add to Basket
                            </button>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Handle Add to Basket button click
            $('.add-to-basket').on('click', function () {
                var productId = $(this).data('product-id');
                var productName = $(this).data('product-name');
                var productPrice = $(this).data('product-price');
                var quantity = $('#quantity-' + productId).val();

                $.ajax({
                    url: '@Url.Action("AddToBasket", "Basket")',
                    type: 'POST',
                    data: {
                        productId: productId,
                        productName: productName,
                        productPrice: productPrice,
                        quantity: quantity
                    },
                    success: function (response) {
                        if (response.success) {
                            alert(response.message);
                        } else {
                            alert('Failed to add product to basket.');
                        }
                    },
                    error: function () {
                        alert('An error occurred while adding the product to the basket.');
                    }
                });
            });

            // Function to update the product list dynamically
            function updateProductList() {
                var searchQuery = $('#SearchQuery').val();
                var minPrice = $('#MinPrice').val();
                var maxPrice = $('#MaxPrice').val();

                $.ajax({
                    url: '@Url.Action("FilterProducts", "Home")',
                    type: 'GET',
                    data: {
                        searchQuery: searchQuery,
                        minPrice: minPrice,
                        maxPrice: maxPrice
                    },
                    success: function (data) {
                        $('#productList').html(data);
                    },
                    error: function () {
                        alert('An error occurred while filtering products.');
                    }
                });
            }

            // Attach event listeners to dynamically update the product list
            $('#SearchQuery').on('input', updateProductList); // Trigger on typing in the search box
            $('#MinPrice, #MaxPrice').on('change', updateProductList); // Trigger on changing min/max price
            
        });
    </script>
}